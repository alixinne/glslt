//! glslt is the main library that supports the GLSL Template compiler transforms. If you are
//! building a system that relies on transforming GLSLT code, you'll want to interact with this
//! library directly instead of the command-line interface provided by `glsltcc`.
//!
//! # Usage
//!
//! ## Rust crate
//!
//! The glslt crate manipulates syntax trees generated by the [glsl
//! crate](https://github.com/phaazon/glsl) (note that the fork currently used is
//! <https://github.com/vtavernier/glsl/tree/dev/>).
//!
//! ## Python library
//!
//! If you installed the glslt library via `pip install glslt` or `maturin
//! develop`, you may use the Python interface to the GLSLT compiler.
//!
//! ```python
//! import glslt
//!
//! # Parse the `sdf.glsl` file with `my-glsl-lib/include` being a system include
//! # directory for #include resolution
//! translation_unit = glslt.parse_files(["sdf.glsl"], ["my-glsl-lib/include"])
//!
//! # Create a new minimizing transform unit
//! unit = glslt.MinUnit()
//!
//! # Add the parsed declarations to the transform unit
//! unit.add_unit(translation_unit)
//!
//! # Get the output of the transform
//! result = unit.to_translation_unit(["mainImage"])
//!
//! # Print the GLSL code
//! print(result.to_glsl())
//! ```

#![deny(missing_docs)]

#[macro_use]
extern crate log;

pub use glsl;

pub mod api;

mod error;
pub use error::*;

mod parse;
pub use parse::*;

pub mod transform;
pub use transform::{transform, transform_min};
