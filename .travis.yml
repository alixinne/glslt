language: rust
services: docker

env:
  global:
    - CRATE_NAME=glslt
    # GH_TOKEN
    - secure: "MiUjcxR5oMScpT50ulEP5kPHxxmywFTdrOwr84JUm11zYgJU0m5lu0P9GSdRbvtFfN2dMvVIilgETexKaeOI/m24AxrKG4VUKAkb7CgUlaFdP1LwP38OdjEGYHjaieb0M1RbOuPshbkgT9kSOftne8rn278YLDuE2E72B2VojtsRja8cW2koLyuUPIPXchtfrATQaTPGKproBAOLgmCio2R7tWDLNIHUSMNb2tnyGKLxiWUh7OYPA3ybzZfoyzsUe7n4AwfjiS1hCNoxq96O+kDW5XNNCTQ5dvPjLIwiOcZwFtj20Kfh7J4ItUz0hG5Q6nsv3F7VGaZdloS4wlN188AMHAan98i3iUQ+L/z7fAOhO+LhexvrE0seUVc6zKMX81PNn1gE8TUjwS95MfXW9VDM0eFPHG17TyLaF3e983GlD2guWvNYSqSR4SqmAhBWcSdi9gXdTejPsjfJyAlET7Bg1YChjpPOmIbi6q9Wfn6oj9O+PPbK1HFnDyMU8sBBVuaWnR4nwr6I4oewX/L/b8U33bjExgvRE4MfxOBvgLjIuLsHN/jxyeTCfc9SYsLyadlUu/9gUWkcJeKWR+uuu1mE4kiJ7mxoqEWPoZxJrepltj6gzoDlVtSxG2t5LS11DwjGRO1wDGwBWKt3P7AQNuHT3cV9Yuj5W1aTyGSCnE0="

jobs:
  include:
    # Linux
    - env: TARGET=x86_64-unknown-linux-gnu CARGO=cross
      dist: xenial
      os: linux
    - env: TARGET=i686-unknown-linux-gnu CARGO=cross
      dist: xenial
      os: linux
    # Windows
    - env: TARGET=i686-pc-windows-msvc CARGO=cargo PYVERSIONSUFFIX=
      os: windows
    - env: TARGET=x86_64-pc-windows-msvc CARGO=cargo PYVERSIONSUFFIX=-amd64
      os: windows

before_install: |
  set -e
  export PATH="$HOME/.local/bin:$PATH"

  case $TRAVIS_OS_NAME in
    linux)
      # Install Linux dependencies (cross)
      mkdir -p $HOME/.local/bin
      wget -qO- https://github.com/rust-embedded/cross/releases/download/v0.2.1/cross-v0.2.1-x86_64-unknown-linux-gnu.tar.gz | tar -C $HOME/.local/bin -xzv
      ;;
  esac

  # Ensure target is installed for Rust
  rustup target add $TARGET

script:
  # Only build the CLI so we don't require Python to be installed
  - $CARGO test --target $TARGET --release
  # Only test the main library (testing is broken when pyo3 is involved)
  - $CARGO build --target $TARGET --release

after_success: |
  if [[ $TRAVIS_BRANCH == master ]] && \
     [ $TRAVIS_PULL_REQUEST = false ] && \
     [ $TRAVIS_OS_NAME = linux ] && \
     [ $TARGET = x86_64-unknown-linux-gnu ]; then
      set -e
      mkdir dist
      cargo doc --no-deps
      mv target/doc dist
      pip install --user ghp-import
      ghp-import -n dist
      git push -fq https://${GH_TOKEN}@github.com/${TRAVIS_REPO_SLUG}.git gh-pages
      set +e
  fi

before_deploy:
  - |
    case $TRAVIS_OS_NAME in
      linux)
        # On Linux, use the manylinux image to build the wheels
        TARGET_ARCH=$(cut -d- -f1 <<< $TARGET)
        docker run --rm -v $(pwd):/io quay.io/pypa/manylinux1_$TARGET_ARCH /io/ci/build_wheels.sh
        ;;
      windows)
        set -x
        # Install pyenv
        export PYENV=$HOME/.pyenv/pyenv-win
        git clone https://github.com/pyenv-win/pyenv-win.git $HOME/.pyenv || true
        # Add pyenv to PATH, save this PATH as reference
        export PATH="$PYENV/bin:$PYENV/shims:$PATH"
        export BASE_PATH="$PATH"
        # Build for all Python versions
        for PYVERSION in 3.5.4 3.6.10 3.7.6 3.8.1; do
          # Prepare environment variables
          export SHORTPYVERSION=$(cut -d. -f1-2 --output-delimiter='' <<< $PYVERSION)
          export PATH="$APPDATA/python/python${SHORTPYVERSION}/Scripts:$BASE_PATH"
          # Install and select Python version
          pyenv install -q ${PYVERSION}${PYVERSIONSUFFIX}
          pyenv global ${PYVERSION}${PYVERSIONSUFFIX}
          pyenv rehash
          # Install maturin for building the package
          pip install --user -U maturin
          # Build native binaries using the installed interpreter
          (cd glslt && maturin build --cargo-extra-args='--features python' --target $TARGET --release -i $(cmd //C python -c 'import sys; print(sys.executable)'))
        done
        set +x
        ;;
    esac
  # Build optimized CLI binary
  - $CARGO rustc -p glslt_cli --bin ${CRATE_NAME}cc --target $TARGET --release -- -C lto
  # Build binary archive into target/wheels for deploy
  - |
    case $TRAVIS_OS_NAME in
      linux)
        (cd target/$TARGET/release && tar czf $TRAVIS_BUILD_DIR/target/wheels/$CRATE_NAME-$TRAVIS_TAG-$TARGET.tar.gz glsltcc)
        ;;
      windows)
        (cd target/$TARGET/release && 7z a $TRAVIS_BUILD_DIR/target/wheels/$CRATE_NAME-$TRAVIS_TAG-$TARGET.zip glsltcc.exe)
        ;;
    esac

deploy:
  api_key:
    secure: "Ci+wjjq5Wq1PXofKpy5VyQT+nolqHuk/7UKaR7+rrFrIort7PAnnQoQbBpW6ijnWjvvz9yw+wVKFye0iH194Ko73E28UrRybf0ofvZzSfnUQJdWn7XvKemt4vIth0br76Kc/uE77aYmWpJbnTgpnKAOV4D5eRHlV5nfIpA5hH4DTZGarwN7pG8gVugVCP8M0bZ9NeuRL3rq7Sg6tplXSinnUfxFUg97VWmJBQCGv8ZMvg/FfOop/pu/AxoJwZOFFsVHbS0TRSs9DPBGJnf2DBsjmBAdC2mmnHeTVo1Ses4cuJ6hSpn79AW+tGwLzwz8ongW/LTBDnZRO1O4N38dnF8i4TIuy+wrCE2fywzN80ML0+IzNOhhuDMaznScgxUffw9O15om7Cr7ZA9LVrINFUEUnm6TVd4wOEBwpXPZTnXmdbwDD7LkMLjEpGW5+dOluTixyl9skNwxeD2/xDbsvPEX0b9TwgOyO5B5ZcpxbscXj02/H1/bpdEEXzDdHAU/n5dZUy2kdz5WWmj1o7OIKhrIClqTV1C6EkYAl9Y7C+WtH/m77D4IMU+JYGY9pmxfXQHT3/D0B9yPpwmxI+UA3pmmmXyYWq1LMvy1UDyS7bvfv03RGLU2femordfWBk7PO/Oulh+xWxMkFLvHDIl0NSKI7mQhNRAqA6R0UgGdhUVM="
  file_glob: true
  file: target/wheels/*
  on:
    condition: $TRAVIS_RUST_VERSION = stable
    tags: true
  provider: releases
  skip_cleanup: true
  draft: true

cache:
  cargo: true
  directories:
    - $HOME/.pyenv

before_cache:
  # Travis can't cache files that are not readable by "others"
  - chmod -R a+r $HOME/.cargo

notifications:
  email:
    on_success: never
